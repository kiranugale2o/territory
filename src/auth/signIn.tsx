import { useNavigation } from '@react-navigation/native';
import React, { JSX, useContext, useState } from 'react';
import {
  View,
  Text,
  TextInput,
  TouchableOpacity,
  StyleSheet,
  LogBox,
  Image,
  Dimensions,
  Button,
  Pressable,
  Alert,
  ToastAndroid,
  KeyboardAvoidingView,
  Platform,
  TouchableWithoutFeedback,
  Keyboard,
  ScrollView,
} from 'react-native';
import { RootStackParamList } from '../types';
import { NativeStackNavigationProp } from '@react-navigation/native-stack';
import Svg, { Path } from 'react-native-svg';
import { AuthContext } from '../context/AuthContext';
import Toast from 'react-native-toast-message';
import AsyncStorage from '@react-native-async-storage/async-storage';
import { toastConfig } from '../utils';

const { width, height } = Dimensions.get('window');
interface ErrorState {
  emailoruser: string;
  password: string;
}
const SignIn = (): JSX.Element => {
  type NavigationProp = NativeStackNavigationProp<
    RootStackParamList,
    'Sign_In'
  >;
  const navigation = useNavigation<NavigationProp>();
  const auth = useContext(AuthContext);
  const [emailoruser, setEmail] = useState<string>('');
  const [password, setPassword] = useState<string>('');
  const [checked, setChecked] = useState<boolean>(false);
  const [buttonDis, setButtonDis] = useState(true);

  const [error, setError] = useState<ErrorState>({
    emailoruser: '',
    password: '',
  });
  // near your other useState hooks
  const [referral, setReferral] = useState('');

  const showToast = async (data: string) => {
    Toast.show({
      type: 'success',
      text1: 'Welcome Back !',
      text2: `${data}ðŸ‘‹`,
      visibilityTime: 5000,
    });
  };

  const handleSignIn = async () => {
    if (emailoruser === '' || password === '') {
      setError({
        ...error,
        emailoruser: `${emailoruser === '' ? 'Enter Email !' : ''}`,
        password: `${password === '' ? 'Enter Password !' : ''}`,
      });
      return 0;
    } else {
      setError({
        ...error,
        emailoruser: `${emailoruser === '' ? 'Enter Email !' : ''}`,
        password: `${password === '' ? 'Enter Password !' : ''}`,
      });
    }

    // if (validateEmail()) {
    try {
      const response = await fetch(
        'https://api.reparv.in/territory-partner/login',
        {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ emailOrUsername: emailoruser, password }),
        },
      );

      const data = await response.json();

      console.log(data);

      if (!response.ok) {
        Toast.show({
          type: 'error',
          text1: `${data.message + '  !' || 'Unknown error'}`,
          visibilityTime: 5000,
        });
        //Alert.alert('Login Failed', data.message || 'Unknown error');
        return;
      }

      //Success - use user data
      await showToast(data.user?.name);
      setTimeout(async () => {
        auth?.setToken(data?.user?.id);
        AsyncStorage.setItem('tPersonToken', String(data?.user?.id));
        auth?.setUser(data.user);
        auth?.setIsLoggedIn(true);
        await AsyncStorage.setItem('tPersonInfo', JSON.stringify(data?.user));
      }, 500); // Delay slightly (500ms) to allow toast to display

      if (referral !== '') {
        fetch('https://api.reparv.in/territoryapp/client/updaterefer', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            referenceno: referral,
            userId: auth?.user?.id,
          }),
        })
          .then(response => response.json())
          .then(data => {
            console.log('Response:', data);
          })
          .catch(error => {
            console.error('Error:', error);
          });
      }
      // You could now navigate or store the user using context or AsyncStorage
    } catch (error) {
      console.error(error);
      Alert.alert('Error', 'Something went wrong. Please try again.' + error);
    }
    //}
  };

  return (
    <View
      style={{
        flex: 1,
        width: '100%',
        backgroundColor: '#EAF6FF',
      }}
    >
      {/* logo */}

      <View style={styles.logo}>
        <Svg width="227" height="96" viewBox="0 0 227 96" fill="none">
          <Path
            d="M172.484 50.7169C171.817 51.0362 171.203 51.4575 170.665 51.9655C169.465 53.1026 168.547 54.8061 168.221 57.3167L167.539 56.4917L162.687 50.6232L160.819 48.3579L159.133 46.32L128.729 9.51689L98.4634 43.7023L94.6953 47.9655L89.4644 53.8741C89.3671 52.5185 88.9252 51.2102 88.1807 50.0732C87.4363 48.9362 86.4138 48.0081 85.2102 47.3768L90.3831 41.5351L93.3619 38.1593L126.013 1.26263C126.37 0.85717 126.811 0.534273 127.306 0.316348C127.8 0.0984231 128.336 -0.00930867 128.876 0.000630163C129.415 0.00852683 129.946 0.132054 130.433 0.362856C130.92 0.593658 131.352 0.926352 131.699 1.33844L162.678 38.8416L164.413 40.9464L165.51 42.2842L167.53 44.728L172.484 50.7169Z"
            fill="#0078DB"
          />
          <Path
            d="M151.311 49.2408V74.4273C151.311 75.0257 151.074 75.5996 150.651 76.0228C150.227 76.446 149.653 76.6837 149.055 76.6837H134.504V56.5185C134.505 56.4375 134.489 56.3572 134.458 56.2823C134.428 56.2074 134.382 56.1393 134.325 56.082C134.268 56.0248 134.2 55.9795 134.125 55.9487C134.05 55.918 133.97 55.9025 133.889 55.9031H123.82C123.739 55.9025 123.658 55.918 123.583 55.9487C123.508 55.9795 123.44 56.0248 123.383 56.082C123.326 56.1393 123.28 56.2074 123.25 56.2823C123.219 56.3572 123.204 56.4375 123.204 56.5185V76.7015H106.633C106.337 76.7021 106.043 76.6442 105.769 76.531C105.495 76.4178 105.246 76.2516 105.036 76.042C104.827 75.8323 104.66 75.5833 104.547 75.3093C104.434 75.0353 104.376 74.7416 104.377 74.4451V49.281C104.38 48.7312 104.581 48.201 104.943 47.7871L106.633 45.8785L126.905 22.9663C127.119 22.7199 127.384 22.5234 127.682 22.3907C127.98 22.258 128.304 22.1924 128.63 22.1983C128.956 22.2043 129.277 22.2817 129.57 22.4252C129.863 22.5687 130.121 22.7747 130.326 23.0287L149.202 45.8785L150.79 47.8005C151.125 48.206 151.309 48.7149 151.311 49.2408Z"
            fill="#004170"
          />
          <Path
            d="M225.796 37.1292L212.03 72.5632C211.502 73.9202 210.577 75.086 209.375 75.908C208.174 76.73 206.752 77.1698 205.296 77.1698H202.781C201.326 77.1696 199.904 76.7296 198.704 75.9076C197.503 75.0855 196.578 73.9198 196.052 72.5632L182.281 37.1292H195.945L204.079 62.717L212.212 37.1292H225.796Z"
            fill="#004170"
          />
          <Path
            d="M24.7323 36.8661V50.2129C24.7323 50.2129 12.5538 46.8907 12.487 59.3635C12.4201 71.8363 12.487 76.7015 12.487 76.7015H0.0275181V59.756C0.0275181 59.756 -1.81866 36.8661 24.7323 36.8661Z"
            fill="#004170"
          />
          <Path
            d="M180.315 36.8661V50.2129C180.315 50.2129 175.99 49.0312 172.484 50.7168C171.816 51.0343 171.202 51.4558 170.665 51.9655C169.47 53.1026 168.547 54.8061 168.221 57.3167C168.133 57.9939 168.089 58.6761 168.088 59.3591C168.088 59.7827 168.088 60.193 168.088 60.6032C168.052 72.1574 168.088 76.6569 168.088 76.6569H155.633V59.7114C155.481 55.7925 156.29 51.896 157.992 48.3623C158.339 47.6604 158.727 46.9799 159.155 46.3244C160.135 44.8224 161.328 43.4705 162.696 42.311C163.254 41.8311 163.839 41.3843 164.449 40.9732C168.047 38.5294 173.149 36.8661 180.315 36.8661Z"
            fill="#004170"
          />
          <Path
            d="M45.3566 68.9512C39.1135 67.9879 37.3699 62.2621 37.3699 62.2621C62.0346 54.1639 57.8161 37.9051 57.8161 37.9051C55.8227 36.8884 42.3064 33.6108 33.9541 40.5005C25.6017 47.3902 25.3698 58.494 27.4033 64.7772C33.9541 84.5723 57.6065 75.6134 57.6065 75.6134V66.2934C56.4203 67.1986 51.6265 69.9055 45.3566 68.9512ZM41.0712 45.6555C43.778 43.4258 48.1526 44.4871 48.7992 44.8127C48.7992 44.8127 50.5072 51.3947 38.9485 53.5218C38.2885 51.4883 38.351 47.8852 41.0712 45.6555Z"
            fill="#004170"
          />
          <Path
            d="M98.463 43.7023C96.2601 40.141 92.9924 37.3632 89.123 35.7623C85.2535 34.1614 80.9784 33.8186 76.9033 34.7825C72.8282 35.7464 69.1597 37.9681 66.4175 41.1329C63.6752 44.2977 61.9983 48.2451 61.6243 52.4159C61.5663 53.0045 61.5396 53.5976 61.5396 54.1996V90.9937C61.5396 90.9937 69.33 91.3327 71.5909 82.521V71.5331C75.4439 73.7413 79.9235 74.6008 84.3202 73.9756C88.7169 73.3504 92.7793 71.2761 95.864 68.0814C98.9487 64.8866 100.879 60.754 101.35 56.3382C101.821 51.9223 100.805 47.4755 98.463 43.7023ZM81.4952 62.4316C79.9382 62.4327 78.4149 61.9792 77.112 61.1268C75.8091 60.2744 74.7835 59.0602 74.1609 57.6332C73.5383 56.2061 73.3459 54.6284 73.6073 53.0936C73.8687 51.5587 74.5725 50.1336 75.6324 48.9931C76.6922 47.8526 78.062 47.0463 79.5736 46.6733C81.0851 46.3002 82.6727 46.3766 84.1415 46.893C85.6103 47.4094 86.8964 48.3434 87.8419 49.5804C88.7874 50.8173 89.3511 52.3034 89.464 53.8562C89.464 54.048 89.464 54.2397 89.464 54.436C89.4681 55.4861 89.2652 56.5268 88.8669 57.4985C88.4685 58.4702 87.8825 59.3538 87.1424 60.0989C86.4023 60.8439 85.5226 61.4358 84.5536 61.8407C83.5846 62.2455 82.5453 62.4554 81.4952 62.4583V62.4316Z"
            fill="#004170"
          />
          <Path
            d="M128.06 39.9654H124.988V43.0379H128.06V39.9654Z"
            fill="white"
          />
          <Path
            d="M128.06 43.9521H124.988V47.0246H128.06V43.9521Z"
            fill="white"
          />
          <Path
            d="M131.926 39.9654H128.854V43.0379H131.926V39.9654Z"
            fill="white"
          />
          <Path
            d="M131.926 43.9521H128.854V47.0246H131.926V43.9521Z"
            fill="white"
          />
          <Path
            d="M81.4176 84.7422V83.6087H88.1718V84.7422H85.4488V92.3359H84.1363V84.7422H81.4176ZM88.8824 92.3359V85.7905H90.1139V86.8303H90.1821C90.3014 86.478 90.5117 86.201 90.8128 85.9993C91.1168 85.7947 91.4605 85.6925 91.8441 85.6925C91.9236 85.6925 92.0174 85.6953 92.1253 85.701C92.2361 85.7067 92.3228 85.7138 92.3853 85.7223V86.9411C92.3341 86.9268 92.2432 86.9112 92.1125 86.8942C91.9818 86.8743 91.8512 86.8643 91.7205 86.8643C91.4193 86.8643 91.1509 86.9283 90.9151 87.0561C90.6821 87.1811 90.4975 87.3558 90.3611 87.5803C90.2247 87.8018 90.1566 88.0547 90.1566 88.3388V92.3359H88.8824ZM97.6342 89.6214V85.7905H98.9126V92.3359H97.6598V91.2024H97.5916C97.441 91.5518 97.1995 91.843 96.8671 92.076C96.5376 92.3061 96.1271 92.4212 95.6356 92.4212C95.2152 92.4212 94.843 92.3288 94.5191 92.1442C94.1981 91.9567 93.9453 91.6797 93.7606 91.3132C93.5788 90.9467 93.4879 90.4936 93.4879 89.9538V85.7905H94.762V89.8004C94.762 90.2464 94.8856 90.6016 95.1328 90.8658C95.3799 91.13 95.701 91.2621 96.0958 91.2621C96.3345 91.2621 96.5717 91.2024 96.8075 91.0831C97.0461 90.9638 97.2436 90.7834 97.3998 90.5419C97.5589 90.3004 97.637 89.9936 97.6342 89.6214ZM103.68 85.7905V86.8132H100.105V85.7905H103.68ZM101.064 84.2223H102.338V90.4141C102.338 90.6612 102.375 90.8473 102.448 90.9723C102.522 91.0945 102.617 91.1783 102.734 91.2237C102.853 91.2663 102.983 91.2876 103.122 91.2876C103.224 91.2876 103.314 91.2805 103.39 91.2663C103.467 91.2521 103.527 91.2408 103.569 91.2322L103.799 92.2848C103.725 92.3132 103.62 92.3416 103.484 92.37C103.348 92.4013 103.177 92.4183 102.973 92.4212C102.637 92.4268 102.325 92.3672 102.035 92.2422C101.745 92.1172 101.511 91.924 101.332 91.6626C101.153 91.4013 101.064 91.0732 101.064 90.6783V84.2223ZM106.504 88.4496V92.3359H105.23V83.6087H106.487V86.8558H106.568C106.722 86.5036 106.956 86.2237 107.271 86.0163C107.587 85.8089 107.999 85.7053 108.507 85.7053C108.956 85.7053 109.348 85.7976 109.683 85.9822C110.021 86.1669 110.283 86.4425 110.467 86.8089C110.655 87.1726 110.749 87.6271 110.749 88.1726V92.3359H109.474V88.326C109.474 87.8459 109.351 87.4737 109.104 87.2095C108.856 86.9425 108.513 86.8089 108.072 86.8089C107.771 86.8089 107.501 86.8729 107.263 87.0007C107.027 87.1286 106.841 87.3161 106.705 87.5632C106.571 87.8075 106.504 88.103 106.504 88.4496ZM113.288 92.4169C113.055 92.4169 112.855 92.3345 112.687 92.1697C112.52 92.0021 112.436 91.8004 112.436 91.5646C112.436 91.3317 112.52 91.1328 112.687 90.968C112.855 90.8004 113.055 90.7166 113.288 90.7166C113.521 90.7166 113.722 90.8004 113.889 90.968C114.057 91.1328 114.141 91.3317 114.141 91.5646C114.141 91.7209 114.101 91.8643 114.021 91.995C113.945 92.1229 113.842 92.2251 113.714 92.3018C113.587 92.3786 113.445 92.4169 113.288 92.4169ZM115.109 84.7422V83.6087H121.863V84.7422H119.14V92.3359H117.828V84.7422H115.109ZM122.574 92.3359V85.7905H123.805V86.8303H123.874C123.993 86.478 124.203 86.201 124.504 85.9993C124.808 85.7947 125.152 85.6925 125.535 85.6925C125.615 85.6925 125.709 85.6953 125.817 85.701C125.928 85.7067 126.014 85.7138 126.077 85.7223V86.9411C126.026 86.9268 125.935 86.9112 125.804 86.8942C125.673 86.8743 125.543 86.8643 125.412 86.8643C125.111 86.8643 124.842 86.9283 124.606 87.0561C124.374 87.1811 124.189 87.3558 124.053 87.5803C123.916 87.8018 123.848 88.0547 123.848 88.3388V92.3359H122.574ZM131.326 89.6214V85.7905H132.604V92.3359H131.351V91.2024H131.283C131.132 91.5518 130.891 91.843 130.559 92.076C130.229 92.3061 129.818 92.4212 129.327 92.4212C128.907 92.4212 128.534 92.3288 128.211 92.1442C127.89 91.9567 127.637 91.6797 127.452 91.3132C127.27 90.9467 127.179 90.4936 127.179 89.9538V85.7905H128.453V89.8004C128.453 90.2464 128.577 90.6016 128.824 90.8658C129.071 91.13 129.392 91.2621 129.787 91.2621C130.026 91.2621 130.263 91.2024 130.499 91.0831C130.738 90.9638 130.935 90.7834 131.091 90.5419C131.25 90.3004 131.328 89.9936 131.326 89.6214ZM139.221 87.3885L138.066 87.593C138.018 87.4453 137.941 87.3047 137.836 87.1712C137.734 87.0376 137.594 86.9283 137.418 86.843C137.242 86.7578 137.022 86.7152 136.758 86.7152C136.397 86.7152 136.096 86.7962 135.854 86.9581C135.613 87.1172 135.492 87.3232 135.492 87.576C135.492 87.7947 135.573 87.9709 135.735 88.1044C135.897 88.2379 136.158 88.3473 136.519 88.4325L137.559 88.6712C138.161 88.8104 138.61 89.0249 138.905 89.3146C139.201 89.6044 139.349 89.9808 139.349 90.4439C139.349 90.8359 139.235 91.1854 139.008 91.4922C138.783 91.7962 138.469 92.0348 138.066 92.2081C137.665 92.3814 137.201 92.468 136.673 92.468C135.94 92.468 135.342 92.3118 134.879 91.9993C134.415 91.6839 134.131 91.2365 134.026 90.657L135.258 90.4695C135.334 90.7905 135.492 91.0334 135.731 91.1982C135.969 91.3601 136.28 91.4411 136.664 91.4411C137.082 91.4411 137.415 91.3544 137.665 91.1811C137.915 91.005 138.04 90.7905 138.04 90.5376C138.04 90.3331 137.964 90.1612 137.81 90.022C137.66 89.8828 137.428 89.7777 137.116 89.7067L136.008 89.4638C135.397 89.3246 134.945 89.103 134.653 88.799C134.363 88.495 134.218 88.1101 134.218 87.6442C134.218 87.2578 134.326 86.9197 134.542 86.63C134.758 86.3402 135.056 86.1143 135.437 85.9524C135.817 85.7876 136.254 85.7053 136.745 85.7053C137.452 85.7053 138.009 85.8587 138.415 86.1655C138.822 86.4695 139.09 86.8771 139.221 87.3885ZM143.805 85.7905V86.8132H140.23V85.7905H143.805ZM141.189 84.2223H142.463V90.4141C142.463 90.6612 142.5 90.8473 142.573 90.9723C142.647 91.0945 142.742 91.1783 142.859 91.2237C142.978 91.2663 143.108 91.2876 143.247 91.2876C143.349 91.2876 143.439 91.2805 143.515 91.2663C143.592 91.2521 143.652 91.2408 143.694 91.2322L143.924 92.2848C143.85 92.3132 143.745 92.3416 143.609 92.37C143.473 92.4013 143.302 92.4183 143.098 92.4212C142.762 92.4268 142.45 92.3672 142.16 92.2422C141.87 92.1172 141.636 91.924 141.457 91.6626C141.278 91.4013 141.189 91.0732 141.189 90.6783V84.2223ZM146.054 92.4169C145.821 92.4169 145.621 92.3345 145.453 92.1697C145.285 92.0021 145.202 91.8004 145.202 91.5646C145.202 91.3317 145.285 91.1328 145.453 90.968C145.621 90.8004 145.821 90.7166 146.054 90.7166C146.287 90.7166 146.487 90.8004 146.655 90.968C146.822 91.1328 146.906 91.3317 146.906 91.5646C146.906 91.7209 146.866 91.8643 146.787 91.995C146.71 92.1229 146.608 92.2251 146.48 92.3018C146.352 92.3786 146.21 92.4169 146.054 92.4169ZM147.875 84.7422V83.6087H154.629V84.7422H151.906V92.3359H150.593V84.7422H147.875ZM155.339 92.3359V85.7905H156.571V86.8303H156.639C156.758 86.478 156.969 86.201 157.27 85.9993C157.574 85.7947 157.918 85.6925 158.301 85.6925C158.381 85.6925 158.474 85.6953 158.582 85.701C158.693 85.7067 158.78 85.7138 158.842 85.7223V86.9411C158.791 86.9268 158.7 86.9112 158.57 86.8942C158.439 86.8743 158.308 86.8643 158.178 86.8643C157.876 86.8643 157.608 86.9283 157.372 87.0561C157.139 87.1811 156.955 87.3558 156.818 87.5803C156.682 87.8018 156.614 88.0547 156.614 88.3388V92.3359H155.339ZM161.791 92.4808C161.376 92.4808 161.001 92.4041 160.666 92.2507C160.331 92.0945 160.065 91.8686 159.869 91.5732C159.676 91.2777 159.58 90.9155 159.58 90.4865C159.58 90.1172 159.651 89.8132 159.793 89.5746C159.935 89.3359 160.126 89.147 160.368 89.0078C160.609 88.8686 160.879 88.7635 161.178 88.6925C161.476 88.6214 161.78 88.5675 162.089 88.5305C162.481 88.4851 162.8 88.4482 163.044 88.4197C163.288 88.3885 163.466 88.3388 163.577 88.2706C163.687 88.2024 163.743 88.0916 163.743 87.9382V87.9084C163.743 87.5362 163.638 87.2479 163.428 87.0433C163.22 86.8388 162.91 86.7365 162.499 86.7365C162.07 86.7365 161.731 86.8317 161.484 87.022C161.24 87.2095 161.071 87.4183 160.977 87.6484L159.78 87.3757C159.922 86.978 160.129 86.657 160.402 86.4126C160.678 86.1655 160.994 85.9865 161.352 85.8757C161.71 85.7621 162.087 85.7053 162.481 85.7053C162.743 85.7053 163.02 85.7365 163.312 85.799C163.608 85.8587 163.883 85.9695 164.139 86.1314C164.398 86.2933 164.609 86.5249 164.774 86.826C164.939 87.1243 165.021 87.5121 165.021 87.9893V92.3359H163.777V91.4411H163.726C163.643 91.6058 163.52 91.7678 163.355 91.9268C163.19 92.0859 162.979 92.218 162.72 92.3232C162.462 92.4283 162.152 92.4808 161.791 92.4808ZM162.068 91.4581C162.42 91.4581 162.722 91.3885 162.972 91.2493C163.224 91.1101 163.416 90.9283 163.547 90.7038C163.68 90.4766 163.747 90.2337 163.747 89.9751V89.1314C163.702 89.1768 163.614 89.2195 163.483 89.2592C163.355 89.2962 163.209 89.3288 163.044 89.3572C162.879 89.3828 162.719 89.407 162.562 89.4297C162.406 89.4496 162.276 89.4666 162.17 89.4808C161.923 89.5121 161.697 89.5646 161.493 89.6385C161.291 89.7124 161.129 89.8189 161.007 89.9581C160.888 90.0945 160.828 90.2763 160.828 90.5036C160.828 90.8189 160.945 91.0575 161.178 91.2195C161.41 91.3786 161.707 91.4581 162.068 91.4581ZM167.992 88.4496V92.3359H166.718V85.7905H167.941V86.8558H168.022C168.173 86.5092 168.409 86.2308 168.73 86.0206C169.054 85.8104 169.461 85.7053 169.953 85.7053C170.399 85.7053 170.789 85.799 171.125 85.9865C171.46 86.1712 171.72 86.4467 171.904 86.8132C172.089 87.1797 172.181 87.6328 172.181 88.1726V92.3359H170.907V88.326C170.907 87.8516 170.784 87.4808 170.537 87.2138C170.289 86.9439 169.95 86.8089 169.518 86.8089C169.223 86.8089 168.96 86.8729 168.73 87.0007C168.502 87.1286 168.322 87.3161 168.189 87.5632C168.058 87.8075 167.992 88.103 167.992 88.4496ZM178.795 87.3885L177.64 87.593C177.592 87.4453 177.515 87.3047 177.41 87.1712C177.308 87.0376 177.169 86.9283 176.992 86.843C176.816 86.7578 176.596 86.7152 176.332 86.7152C175.971 86.7152 175.67 86.7962 175.429 86.9581C175.187 87.1172 175.066 87.3232 175.066 87.576C175.066 87.7947 175.147 87.9709 175.309 88.1044C175.471 88.2379 175.733 88.3473 176.093 88.4325L177.133 88.6712C177.735 88.8104 178.184 89.0249 178.48 89.3146C178.775 89.6044 178.923 89.9808 178.923 90.4439C178.923 90.8359 178.809 91.1854 178.582 91.4922C178.358 91.7962 178.044 92.0348 177.64 92.2081C177.24 92.3814 176.775 92.468 176.247 92.468C175.514 92.468 174.916 92.3118 174.453 91.9993C173.99 91.6839 173.706 91.2365 173.6 90.657L174.832 90.4695C174.909 90.7905 175.066 91.0334 175.305 91.1982C175.544 91.3601 175.855 91.4411 176.238 91.4411C176.656 91.4411 176.99 91.3544 177.24 91.1811C177.49 91.005 177.615 90.7905 177.615 90.5376C177.615 90.3331 177.538 90.1612 177.385 90.022C177.234 89.8828 177.002 89.7777 176.69 89.7067L175.582 89.4638C174.971 89.3246 174.519 89.103 174.227 88.799C173.937 88.495 173.792 88.1101 173.792 87.6442C173.792 87.2578 173.9 86.9197 174.116 86.63C174.332 86.3402 174.63 86.1143 175.011 85.9524C175.392 85.7876 175.828 85.7053 176.319 85.7053C177.027 85.7053 177.583 85.8587 177.99 86.1655C178.396 86.4695 178.664 86.8771 178.795 87.3885ZM180.324 94.7905V85.7905H181.568V86.8516H181.675C181.749 86.7152 181.855 86.5575 181.994 86.3786C182.133 86.1996 182.327 86.0433 182.574 85.9098C182.821 85.7734 183.148 85.7053 183.554 85.7053C184.082 85.7053 184.554 85.8388 184.969 86.1058C185.383 86.3729 185.709 86.7578 185.945 87.2607C186.183 87.7635 186.303 88.3686 186.303 89.076C186.303 89.7834 186.185 90.3899 185.949 90.8956C185.713 91.3984 185.389 91.7862 184.977 92.0589C184.565 92.3288 184.095 92.4638 183.567 92.4638C183.169 92.4638 182.844 92.397 182.591 92.2635C182.341 92.13 182.145 91.9737 182.003 91.7947C181.861 91.6158 181.751 91.4567 181.675 91.3175H181.598V94.7905H180.324ZM181.572 89.0632C181.572 89.5234 181.639 89.9268 181.773 90.2734C181.906 90.62 182.099 90.8913 182.352 91.0874C182.605 91.2805 182.915 91.3771 183.281 91.3771C183.662 91.3771 183.98 91.2763 184.236 91.0746C184.491 90.87 184.685 90.593 184.815 90.2436C184.949 89.8942 185.016 89.5007 185.016 89.0632C185.016 88.6314 184.95 88.2436 184.82 87.8999C184.692 87.5561 184.499 87.2848 184.24 87.0859C183.984 86.8871 183.665 86.7876 183.281 86.7876C182.912 86.7876 182.599 86.8828 182.344 87.0732C182.091 87.2635 181.899 87.5291 181.768 87.87C181.638 88.2109 181.572 88.6087 181.572 89.0632ZM189.635 92.4808C189.22 92.4808 188.845 92.4041 188.51 92.2507C188.175 92.0945 187.909 91.8686 187.713 91.5732C187.52 91.2777 187.423 90.9155 187.423 90.4865C187.423 90.1172 187.494 89.8132 187.636 89.5746C187.778 89.3359 187.97 89.147 188.212 89.0078C188.453 88.8686 188.723 88.7635 189.021 88.6925C189.32 88.6214 189.624 88.5675 189.933 88.5305C190.325 88.4851 190.643 88.4482 190.888 88.4197C191.132 88.3885 191.31 88.3388 191.42 88.2706C191.531 88.2024 191.587 88.0916 191.587 87.9382V87.9084C191.587 87.5362 191.481 87.2479 191.271 87.0433C191.064 86.8388 190.754 86.7365 190.342 86.7365C189.913 86.7365 189.575 86.8317 189.328 87.022C189.084 87.2095 188.915 87.4183 188.821 87.6484L187.624 87.3757C187.766 86.978 187.973 86.657 188.246 86.4126C188.521 86.1655 188.838 85.9865 189.196 85.8757C189.554 85.7621 189.93 85.7053 190.325 85.7053C190.587 85.7053 190.864 85.7365 191.156 85.799C191.452 85.8587 191.727 85.9695 191.983 86.1314C192.241 86.2933 192.453 86.5249 192.618 86.826C192.783 87.1243 192.865 87.5121 192.865 87.9893V92.3359H191.621V91.4411H191.57C191.487 91.6058 191.364 91.7678 191.199 91.9268C191.034 92.0859 190.822 92.218 190.564 92.3232C190.305 92.4283 189.996 92.4808 189.635 92.4808ZM189.912 91.4581C190.264 91.4581 190.565 91.3885 190.815 91.2493C191.068 91.1101 191.26 90.9283 191.391 90.7038C191.524 90.4766 191.591 90.2337 191.591 89.9751V89.1314C191.545 89.1768 191.457 89.2195 191.327 89.2592C191.199 89.2962 191.053 89.3288 190.888 89.3572C190.723 89.3828 190.562 89.407 190.406 89.4297C190.25 89.4496 190.119 89.4666 190.014 89.4808C189.767 89.5121 189.541 89.5646 189.337 89.6385C189.135 89.7124 188.973 89.8189 188.851 89.9581C188.731 90.0945 188.672 90.2763 188.672 90.5036C188.672 90.8189 188.788 91.0575 189.021 91.2195C189.254 91.3786 189.551 91.4581 189.912 91.4581ZM194.562 92.3359V85.7905H195.794V86.8303H195.862C195.981 86.478 196.191 86.201 196.492 85.9993C196.796 85.7947 197.14 85.6925 197.524 85.6925C197.603 85.6925 197.697 85.6953 197.805 85.701C197.916 85.7067 198.002 85.7138 198.065 85.7223V86.9411C198.014 86.9268 197.923 86.9112 197.792 86.8942C197.662 86.8743 197.531 86.8643 197.4 86.8643C197.099 86.8643 196.831 86.9283 196.595 87.0561C196.362 87.1811 196.177 87.3558 196.041 87.5803C195.904 87.8018 195.836 88.0547 195.836 88.3388V92.3359H194.562ZM201.754 92.468C201.109 92.468 200.554 92.3303 200.088 92.0547C199.625 91.7763 199.267 91.3857 199.014 90.8828C198.764 90.3771 198.639 89.7848 198.639 89.1058C198.639 88.4354 198.764 87.8445 199.014 87.3331C199.267 86.8217 199.619 86.4226 200.071 86.1357C200.526 85.8487 201.057 85.7053 201.665 85.7053C202.034 85.7053 202.392 85.7663 202.739 85.8885C203.085 86.0107 203.396 86.2024 203.672 86.4638C203.947 86.7251 204.165 87.0646 204.324 87.4822C204.483 87.897 204.562 88.4013 204.562 88.995V89.4467H199.359V88.4922H203.314C203.314 88.157 203.246 87.8601 203.109 87.6016C202.973 87.3402 202.781 87.1342 202.534 86.9837C202.29 86.8331 202.003 86.7578 201.673 86.7578C201.315 86.7578 201.003 86.8459 200.736 87.022C200.472 87.1953 200.267 87.4226 200.122 87.7038C199.98 87.9822 199.909 88.2848 199.909 88.6115V89.3572C199.909 89.7947 199.986 90.1669 200.139 90.4737C200.295 90.7805 200.513 91.0149 200.791 91.1768C201.07 91.3359 201.395 91.4155 201.767 91.4155C202.008 91.4155 202.229 91.3814 202.428 91.3132C202.626 91.2422 202.798 91.1371 202.943 90.9979C203.088 90.8587 203.199 90.6868 203.276 90.4822L204.481 90.6996C204.385 91.0547 204.212 91.3658 203.962 91.6328C203.714 91.897 203.403 92.103 203.028 92.2507C202.656 92.3956 202.231 92.468 201.754 92.468ZM207.25 88.4496V92.3359H205.976V85.7905H207.199V86.8558H207.28C207.431 86.5092 207.667 86.2308 207.988 86.0206C208.311 85.8104 208.719 85.7053 209.211 85.7053C209.657 85.7053 210.047 85.799 210.382 85.9865C210.718 86.1712 210.978 86.4467 211.162 86.8132C211.347 87.1797 211.439 87.6328 211.439 88.1726V92.3359H210.165V88.326C210.165 87.8516 210.042 87.4808 209.794 87.2138C209.547 86.9439 209.208 86.8089 208.776 86.8089C208.48 86.8089 208.218 86.8729 207.988 87.0007C207.76 87.1286 207.58 87.3161 207.446 87.5632C207.316 87.8075 207.25 88.103 207.25 88.4496ZM215.905 92.468C215.272 92.468 214.726 92.3246 214.269 92.0376C213.814 91.7479 213.465 91.3487 213.22 90.8402C212.976 90.3317 212.854 89.7493 212.854 89.093C212.854 88.4283 212.979 87.8416 213.229 87.3331C213.479 86.8217 213.831 86.4226 214.286 86.1357C214.74 85.8487 215.276 85.7053 215.892 85.7053C216.39 85.7053 216.833 85.7976 217.222 85.9822C217.611 86.1641 217.925 86.4197 218.164 86.7493C218.405 87.0788 218.549 87.4638 218.594 87.9041H217.354C217.286 87.5973 217.13 87.3331 216.885 87.1115C216.644 86.8899 216.32 86.7791 215.914 86.7791C215.559 86.7791 215.247 86.8729 214.98 87.0604C214.716 87.245 214.51 87.5092 214.363 87.853C214.215 88.1939 214.141 88.5973 214.141 89.0632C214.141 89.5405 214.213 89.9524 214.358 90.299C214.503 90.6456 214.708 90.9141 214.972 91.1044C215.239 91.2947 215.553 91.3899 215.914 91.3899C216.155 91.3899 216.374 91.3459 216.57 91.2578C216.769 91.1669 216.935 91.0376 217.068 90.87C217.205 90.7024 217.3 90.5007 217.354 90.2649H218.594C218.549 90.6882 218.411 91.0661 218.181 91.3984C217.951 91.7308 217.642 91.9922 217.256 92.1825C216.872 92.3729 216.422 92.468 215.905 92.468ZM220.762 94.7905C220.572 94.7905 220.398 94.7749 220.242 94.7436C220.086 94.7152 219.969 94.6839 219.893 94.6499L220.2 93.6058C220.432 93.6683 220.64 93.6953 220.822 93.6868C221.004 93.6783 221.164 93.6101 221.303 93.4822C221.445 93.3544 221.57 93.1456 221.678 92.8558L221.836 92.4212L219.441 85.7905H220.805L222.462 90.87H222.53L224.188 85.7905H225.556L222.859 93.2095C222.734 93.5504 222.575 93.8388 222.381 94.0746C222.188 94.3132 221.958 94.4922 221.691 94.6115C221.424 94.7308 221.114 94.7905 220.762 94.7905Z"
            fill="black"
          />
        </Svg>
      </View>

      <KeyboardAvoidingView
        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}
        style={{ flex: 1 }}
      >
        <TouchableWithoutFeedback onPress={Keyboard.dismiss}>
          <ScrollView
            contentContainerStyle={{ flexGrow: 1 }}
            keyboardShouldPersistTaps="handled"
          >
            <View
              style={{
                width: '100%',
                marginTop: 0,
                flex: 1,
                backgroundColor: '#EAF6FF',
              }}
            >
              <View style={styles.loginBox}>
                <View
                  style={{
                    width: '100%',
                    //   margin: 'auto',
                    marginTop: 0,
                  }}
                >
                  <View style={styles.loginBox}>
                    {/* Title */}
                    <View style={styles.textContainer}>
                      <Text style={styles.title}>Login</Text>
                    </View>

                    {/* Input Fields */}
                    <View style={styles.inputContainer}>
                      {/* Email Input */}
                      <View style={styles.inputField}>
                        <Text style={styles.label}>Email</Text>

                        <View style={[styles.inputBox]}>
                          <Svg
                            width="16"
                            height="17"
                            viewBox="0 0 16 17"
                            fill="none"
                          >
                            <Path
                              d="M4 14.5V13.1667C4 12.4594 4.28095 11.7811 4.78105 11.281C5.28115 10.781 5.95942 10.5 6.66667 10.5H9.33333C10.0406 10.5 10.7189 10.781 11.219 11.281C11.719 11.7811 12 12.4594 12 13.1667V14.5M5.33333 5.16667C5.33333 5.87391 5.61428 6.55219 6.11438 7.05229C6.61448 7.55238 7.29276 7.83333 8 7.83333C8.70724 7.83333 9.38552 7.55238 9.88562 7.05229C10.3857 6.55219 10.6667 5.87391 10.6667 5.16667C10.6667 4.45942 10.3857 3.78115 9.88562 3.28105C9.38552 2.78095 8.70724 2.5 8 2.5C7.29276 2.5 6.61448 2.78095 6.11438 3.28105C5.61428 3.78115 5.33333 4.45942 5.33333 5.16667Z"
                              stroke="#ACB5BB"
                              strokeWidth="1.3"
                              strokeLinecap="round"
                              strokeLinejoin="round"
                            />
                          </Svg>

                          <TextInput
                            style={styles.input}
                            placeholder="yourname@gmail.com"
                            placeholderTextColor="rgba(0, 0, 0, 0.4)"
                            // value={email}
                            onChangeText={setEmail}
                            keyboardType="email-address"
                            autoCapitalize="none"
                          />
                        </View>
                        {error?.emailoruser !== '' && (
                          <Text style={styles.errorText}>
                            {error.emailoruser}
                          </Text>
                        )}
                      </View>

                      {/* Password Input */}
                      <View style={styles.inputField}>
                        <Text style={styles.label}>Password</Text>
                        <View
                          style={[
                            styles.inputBox,
                            ,
                            { justifyContent: 'space-between' },
                          ]}
                        >
                          <TextInput
                            style={styles.input}
                            placeholder="password"
                            placeholderTextColor="rgba(0, 0, 0, 0.4)"
                            // value={password}
                            onChangeText={setPassword}
                          />
                          <Svg
                            width="16"
                            height="17"
                            viewBox="0 0 16 17"
                            fill="none"
                          >
                            <Path
                              d="M7.05671 7.55794C6.8067 7.80804 6.66628 8.14721 6.66634 8.50085C6.6664 8.85448 6.80694 9.1936 7.05704 9.44361C7.30714 9.69362 7.64631 9.83404 7.99994 9.83398C8.35358 9.83392 8.6927 9.69338 8.94271 9.44328M11.1207 11.6154C10.1855 12.2005 9.1031 12.5073 8 12.5C5.6 12.5 3.6 11.1667 2 8.50002C2.848 7.08669 3.808 6.04802 4.88 5.38402M6.78667 4.62002C7.18603 4.53917 7.59254 4.49897 8 4.50002C10.4 4.50002 12.4 5.83335 14 8.50002C13.556 9.24002 13.0807 9.87802 12.5747 10.4134M2 2.5L14 14.5"
                              stroke="rgba(0, 0, 0, 0.4)"
                              stroke-opacity="0.4"
                              stroke-width="1.3"
                              stroke-linecap="round"
                              stroke-linejoin="round"
                            />
                          </Svg>
                        </View>
                        {error.password !== '' && (
                          <Text style={styles.errorText}>{error.password}</Text>
                        )}
                      </View>
                    </View>

                    {/* Remember Me & Forgot Password */}
                    <View style={styles.optionsContainer}>
                      <TouchableOpacity
                        style={[styles.checkboxContainer]}
                        onPress={() => setChecked(!checked)}
                      >
                        <View
                          style={[styles.checkbox, checked && styles.checked]}
                        >
                          {checked && <Text style={styles.checkmark}>âœ“</Text>}
                        </View>
                        <Text style={styles.label}>Remember Me</Text>
                      </TouchableOpacity>
                      <Pressable
                        onPress={() => navigation.navigate('ForgotPassword')}
                      >
                        <Text style={styles.forgotPassword}>
                          Forgot Password?
                        </Text>
                      </Pressable>
                    </View>

                    {/* Login Button */}
                    <TouchableOpacity
                      style={[styles.loginBtn]}
                      onPress={handleSignIn}
                    >
                      <Text style={styles.loginBtnText}>Log In</Text>
                    </TouchableOpacity>
                  </View>
                </View>
              </View>
            </View>
          </ScrollView>
        </TouchableWithoutFeedback>
      </KeyboardAvoidingView>

      <Toast config={toastConfig} />
    </View>
  );
};

const styles = StyleSheet.create({
  logo: {
    resizeMode: 'contain',
    alignSelf: 'center',

    marginHorizontal: 20,
    marginTop: 20,
  },
  loginBox: {
    display: 'flex',
    //padding: 10,
    flex: 0,
    gap: 24,
    width: '90%',
    margin: 'auto',

    marginTop: 20,
    // height: 380,
    backgroundColor: '#FFFFFF',
    borderRadius: 12,
  },

  text: {
    position: 'absolute',
    left: '41.77%',
    right: '20.8%',
    top: '24.8%',
    bottom: '73.42%',
    fontFamily: 'Inter',
    fontSize: 12,
    fontWeight: '500',
    lineHeight: 15,
    color: '#000000',
  },
  vector: {
    position: 'absolute',
    left: '42.87%',
    right: '34.75%',
    top: '15.28%',
    bottom: '77.92%',
  },
  textContainer: {
    display: 'flex',
    flexDirection: 'column',
    justifyContent: 'center',
    alignItems: 'center',
    width: '100%',
    height: 42,
  },
  title: {
    fontFamily: 'Inter',
    fontStyle: 'normal',
    fontWeight: '700',
    fontSize: 32,

    textAlign: 'center',
    letterSpacing: -0.02,
    color: '#111827',
  },
  inputContainer: {
    width: '100%',
    display: 'flex',
    marginInline: 'auto',
    gap: 16,
    padding: 5,
  },

  inputBox: {
    width: '100%',
    marginInline: 'auto',
    flexDirection: 'row',
    alignItems: 'center',
    borderWidth: 1,
    borderColor: '#ccc',
    paddingHorizontal: 10,
    paddingVertical: 2,
    borderRadius: 8,
    backgroundColor: '#fff',
  },
  inputField: {
    width: '100%',
    display: 'flex',
    flexDirection: 'column',
    alignItems: 'flex-start',
    gap: 5,
  },
  label: {
    fontFamily: 'Plus Jakarta Sans',
    fontSize: 12,
    marginInline: 7,
    fontWeight: '500',
    color: 'rgba(0, 0, 0, 0.4)',
  },
  input: {
    width: 'auto',
    backgroundColor: '#FFFFFF',
    fontSize: 14,
    fontWeight: '500',
    color: '#1A1C1E',
  },
  errorText: {
    color: 'red',
    fontSize: 12,
    marginTop: 4,
    marginLeft: 4,
  },
  optionsContainer: {
    paddingInline: 10,
    width: '100%',
    marginInline: 'auto',
    flexDirection: 'row',
    justifyContent: 'space-between',
  },
  checkboxContainer: {
    gap: 5,
    flexDirection: 'row',
  },
  checkbox: {
    width: 16,
    height: 16,
    borderWidth: 1,
    borderRadius: 1,
    borderColor: 'rgba(0, 0, 0, 0.4)',

    justifyContent: 'center',
    alignItems: 'center',
  },
  checked: {
    backgroundColor: '#0078DB',
  },
  checkmark: {
    color: 'white',
    fontSize: 14,
  },

  forgotPassword: {
    fontSize: 12,
    fontWeight: '600',
    color: '#004170',
  },
  loginBtn: {
    flexDirection: 'row',
    justifyContent: 'center',
    alignItems: 'center',
    width: '100%',
    height: 49,
    marginInline: 'auto',
    backgroundColor: '#0078DB',
    borderRadius: 4,
  },
  loginBtnText: {
    fontSize: 18,
    fontWeight: '500',
    color: 'white',
  },
});

export default SignIn;
